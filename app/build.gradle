plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 32


    defaultConfig {
        applicationId "com.example.theweatherwithnesterenko"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey = properties.getProperty("yandex_weather_api_key", "")
        it.buildConfigField "String", "WEATHER_API_KEY", apiKey
    }

    signingConfigs {
        freeAdultRelease {
            Properties properties = new Properties()
            properties.load(rootProject.file("password.properties").newDataInputStream())
            def password = properties.getProperty("password")
            storeFile file("key_app.jks")
            storePassword = password
            keyAlias 'alias'
            keyPassword = password
        }

    }

    buildTypes {

        release {
            signingConfig signingConfigs.freeAdultRelease
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexEnabled false
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }


    flavorDimensions 'distribution', 'age'
    productFlavors {
        free {
            dimension 'distribution'
        }
        paid {
            dimension 'distribution'
        }
        kids {
            dimension 'age'
        }
        adult {
            dimension 'age'
        }
    }

    namespace 'com.example.theweatherwithnesterenko'
    //FIXME что это и зачем? Откуда взялось не помню.


}

dependencies {
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.firebase:firebase-messaging:23.0.4'
    apply plugin: 'kotlin-kapt'
//Room
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
//OkHttp3
//    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
//Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
//Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
//Coil
    implementation 'io.coil-kt:coil:1.4.0'
    implementation 'io.coil-kt:coil-svg:1.3.2'
//Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
//Other
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}